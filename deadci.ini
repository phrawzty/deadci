# This is a DeadCI Configuration file. 
# http://deadci.com
# This file should be placed in the "data-dir" and be named "deadci.ini"
 
# Command to run to perform the build / test. 
# 
# The command will be run with it's path set to the root directory of the repository being tested.
# If this command exits with a non-zero exit status the build failed. If it exits with a zero, the build marked sucessful.
# 
# The following Environment variables are provided:
#   $DEADCI_DOMAIN         # The domain, for example "github.com"
#   $DEADCI_OWNER          # The repo owner, for example "phayes"
#   $DEADCI_REPO           # The repo name, for example "deadci"
#   $DEADCI_BRANCH         # The branch being tested, for example "master"
#   $DEADCI_COMMIT         # The commit being tested, for exampe "090e755e25e17bdc295352ac1943da013184c431"
# 
# Examples:
#   ./runtests             # Run a script called "runtests" that's part of the repository and stored in the root
#   php jolici.phar run    # Use JoliCI to run tests inside a docker instance
#   local-travis           # Run a local travis job from a .travis.yml file. See 
command = 

# Port on which to listen for github webhooks and to on which to serve the UI via HTTP
port = 80

# Hostname of the server. By default the hostname will be automatically discovered.
# Uncomment to enable a custom hostname.
#host = example.com

# By default git clones will use git+ssh. Set to true to use https clones.
#httpsclone = true

[github]

# Enable the GitHub domain. Set to false to disable
enabled = true

# Access token for posting results back to github. If no token is supplied, then no reports will be posted. 
# See https://help.github.com/articles/creating-an-access-token-for-command-line-use
token = ABC123

# Secret for HMAC verification. If not provided no HMAC verification will be done and all requests will be processed. 
# See https://developer.github.com/webhooks/securing
secret = ABC123

